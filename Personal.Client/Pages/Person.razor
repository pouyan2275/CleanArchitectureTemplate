@page "/"
@inject HttpClient Http

<PageTitle>داشبورد</PageTitle>
<div class="flex-column h-25 w-100 mb-2 bg-gray rounded px-2">
    <h3>جستجو</h3>
    <div class="d-flex flex-wrap">
        <div class="m-2">
            <label>نام</label>
            <input class="form-control" type="text" name="name" value="" />
        </div>
        <div class="m-2">
            <label>نام خانوادگی</label>
            <input class="form-control " type="text" name="name" value="" />
        </div>
        <div class="m-2">
            <label>کد ملی</label>
            <input class="form-control " type="text" name="name" value="" />
        </div>
        
        <div class="m-2">
            <label>آخرین مدرک تحصیلی</label>
            <input class="form-control " type="text" name="name" value="" />
        </div>

        <div class="m-2">
            <label>تاریخ تولد</label>
            <input class="form-control " type="date" name="name" value="" />
        </div>
        <div class=" align-content-end m-2">
            <button class="btn btn-primary px-xxl-5">جستجو</button>
        </div>
    </div>
</div>
<hr />
<button class="btn btn-success"> افزودن</button>

@if (personal == null)
{
    <p><em>درحال بارگذاری...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>نام</th>
                <th>نام خانوادگی</th>
                <th>کد ملی</th>
                <th>آخرین مدرک تحصیلی</th>
                <th>تاریخ تولد</th>
                <th>ویرایش</th>
                <th>حذف</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var person in personal)
            {
                <tr>
                    <td>@person.Name</td>
                    <td>@person.Family</td>
                    <td>@person.NationalCode</td>
                    <td>@person.Degree?.Title</td>
                    <td>1377/03/01</td>
                    <td><button class="btn btn-warning ">ویرایش</button></td>
                    <td><button class="btn btn-danger">حذف</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private PersonDtoSelect[]? personal;

    protected override async Task OnInitializedAsync()
    {
        
        // forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        personal = await Http.GetFromJsonAsync<PersonDtoSelect[]>("api/Person");
        Console.WriteLine(personal);

    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

    public class PersonDtoSelect
    {
        public string? Name { get; set; }
        public string? Family { get; set; }
        public string? NationalCode { get; set; }
        public Guid Id { get; set; }
        public Guid? DegreeId { get; set; }
        public Degree? Degree { get; set; }
    }
    public class PersonDto
    {
        public string? Name { get; set; }
        public string? Family { get; set; }
        public string? NationalCode { get; set; }
        public Guid? DegreeId { get; set; }
    }
    public class Degree 
    {
        public string? Title { get; set; }
        public int? Index { get; set; }
        public Guid Id { get; set; }
        public Guid? CreatedBy { get; set; }
        public DateTime? CreatedOn { get; set; }
        public Guid? ModifiedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
    }
}